[
  {
    "days": [
      {
        "day": 1,
        "title": "HTML 기본 태그",
        "questions": [
          {
            "id": 1,
            "category": "HTML",
            "question": "<h1> 태그의 역할은 무엇인가요?",
            "options": [
              "페이지 제목",
              "이미지 삽입",
              "하이퍼링크",
              "본문 텍스트"
            ],
            "answer": "페이지 제목",
            "explanation": "<h1> 태그는 페이지의 주요 제목을 나타내는 데 사용됩니다."
          },
          {
            "id": 2,
            "category": "HTML",
            "question": "이미지 삽입에 사용하는 태그는 무엇인가요?",
            "options": [
              "<img>",
              "<src>",
              "<link>",
              "<icon>"
            ],
            "answer": "<img>",
            "explanation": "<img> 태그는 HTML에서 이미지를 삽입하는 데 사용되며 src 속성을 통해 경로를 지정합니다."
          },
          {
            "id": 3,
            "category": "HTML",
            "question": "하이퍼링크를 생성하기 위한 태그는 무엇인가요?",
            "options": [
              "<a>",
              "<link>",
              "<href>",
              "<button>"
            ],
            "answer": "<a>",
            "explanation": "<a> 태그는 하이퍼링크를 만들기 위해 사용되며 href 속성으로 연결 주소를 지정합니다."
          },
          {
            "id": 4,
            "category": "HTML",
            "question": "<html> 태그의 위치는 어디여야 하나요?",
            "options": [
              "문서의 최상단",
              "바디 내부",
              "헤드 내부",
              "본문 끝"
            ],
            "answer": "문서의 최상단",
            "explanation": "<html> 태그는 HTML 문서의 최상위 태그로, 문서의 최상단에 위치해야 합니다."
          },
          {
            "id": 5,
            "category": "HTML",
            "question": "HTML 페이지 제목을 설정하는 태그는 무엇인가요?",
            "options": [
              "<title>",
              "<h1>",
              "<header>",
              "<meta>"
            ],
            "answer": "<title>",
            "explanation": "<title> 태그는 브라우저 탭에 표시될 페이지 제목을 설정합니다."
          }
        ]
      },
      {
        "day": 2,
        "title": "HTML 속성 이해하기",
        "questions": [
          {
            "id": 6,
            "category": "HTML",
            "question": "<img> 태그에서 이미지 파일 경로를 지정하는 속성은 무엇인가요?",
            "options": [
              "src",
              "href",
              "link",
              "path"
            ],
            "answer": "src",
            "explanation": "src 속성은 이미지 파일의 경로를 지정하는 데 사용됩니다."
          },
          {
            "id": 7,
            "category": "HTML",
            "question": "하이퍼링크의 목적지를 설정하는 속성은 무엇인가요?",
            "options": [
              "src",
              "href",
              "target",
              "path"
            ],
            "answer": "href",
            "explanation": "href 속성은 링크가 연결되는 URL을 설정합니다."
          },
          {
            "id": 8,
            "category": "HTML",
            "question": "테이블의 제목을 설정하는 태그는 무엇인가요?",
            "options": [
              "<table>",
              "<caption>",
              "<thead>",
              "<title>"
            ],
            "answer": "<caption>",
            "explanation": "<caption> 태그는 테이블에 제목을 부여하기 위해 사용됩니다."
          },
          {
            "id": 9,
            "category": "HTML",
            "question": "텍스트에 굵은 효과를 주는 태그는 무엇인가요?",
            "options": [
              "<b>",
              "<strong>",
              "<em>",
              "<p>"
            ],
            "answer": "<b>",
            "explanation": "<b> 태그는 텍스트에 굵은 효과를 추가합니다."
          },
          {
            "id": 10,
            "category": "HTML",
            "question": "HTML 주석을 작성하는 방법은?",
            "options": [
              "<!-- 주석 -->",
              "// 주석",
              "/* 주석 */",
              "{# 주석 #}"
            ],
            "answer": "<!-- 주석 -->",
            "explanation": "HTML 주석은 <!-- 주석 --> 형식으로 작성합니다."
          }
        ]
      },
      {
        "day": 3,
        "title": "CSS 기본 선택자",
        "questions": [
          {
            "id": 11,
            "category": "CSS",
            "question": "클래스 이름이 'content'인 요소에 스타일을 적용하려면 어떻게 하나요?",
            "options": [
              ".content",
              "#content",
              "content",
              "<content>"
            ],
            "answer": ".content",
            "explanation": "CSS에서 클래스 선택자는 '.'을 사용하여 정의합니다."
          },
          {
            "id": 12,
            "category": "CSS",
            "question": "id가 'header'인 요소에 스타일을 적용하려면 어떤 선택자를 사용해야 할까요?",
            "options": [
              ".header",
              "#header",
              "header",
              "<header>"
            ],
            "answer": "#header",
            "explanation": "id 선택자는 '#'으로 시작하며 특정 요소를 선택합니다."
          },
          {
            "id": 13,
            "category": "CSS",
            "question": "모든 <p> 태그에 동일한 스타일을 적용하려면 어떤 선택자를 사용해야 하나요?",
            "options": [
              "p {}",
              ".p {}",
              "#p {}",
              "<p>"
            ],
            "answer": "p {}",
            "explanation": "태그 이름을 그대로 사용해 해당 태그 전체에 스타일을 적용할 수 있습니다."
          },
          {
            "id": 14,
            "category": "CSS",
            "question": "HTML 요소를 중앙 정렬하려면 CSS에서 어떤 속성을 사용하는 것이 좋을까요?",
            "options": [
              "text-align",
              "justify-content",
              "align-items",
              "position"
            ],
            "answer": "text-align",
            "explanation": "'text-align: center;'는 텍스트를 중앙 정렬할 때 사용됩니다."
          },
          {
            "id": 15,
            "category": "CSS",
            "question": "배경색을 설정하기 위해 사용하는 CSS 속성은 무엇인가요?",
            "options": [
              "background-color",
              "color",
              "font-color",
              "border-color"
            ],
            "answer": "background-color",
            "explanation": "'background-color'는 요소의 배경색을 설정합니다."
          }
        ]
      },
      {
        "day": 4,
        "title": "CSS 스타일링",
        "questions": [
          {
            "id": 16,
            "category": "CSS 스타일링",
            "question": "글꼴 크기를 20픽셀로 설정하기 위한 CSS 속성은 무엇인가요?",
            "options": [
              "font-size: 20px;",
              "text-size: 20px;",
              "font: 20px;",
              "size: 20px;"
            ],
            "answer": "font-size: 20px;",
            "explanation": "'font-size' 속성으로 글꼴 크기를 지정할 수 있습니다."
          },
          {
            "id": 17,
            "category": "CSS 스타일링",
            "question": "텍스트 색상을 빨간색으로 바꾸기 위해 사용할 CSS 속성은 무엇일까요?",
            "options": [
              "color",
              "background-color",
              "font-color",
              "text-color"
            ],
            "answer": "color",
            "explanation": "'color' 속성은 텍스트 색상을 설정하는 데 사용됩니다."
          },
          {
            "id": 18,
            "category": "CSS 스타일링",
            "question": "배경색을 파란색으로 설정하려면 어떤 CSS 속성을 사용해야 하나요?",
            "options": [
              "background-color",
              "color",
              "font-background",
              "border-color"
            ],
            "answer": "background-color",
            "explanation": "'background-color: blue;'는 배경을 파란색으로 설정합니다."
          },
          {
            "id": 19,
            "category": "CSS 스타일링",
            "question": "웹 페이지에서 두 개의 요소를 가로로 정렬하려면 어떤 CSS 속성을 사용할 수 있나요?",
            "options": [
              "display: flex;",
              "text-align: center;",
              "justify-content: space-between;",
              "align-items: center;"
            ],
            "answer": "display: flex;",
            "explanation": "'display: flex;'는 요소를 가로로 정렬하는 데 유용합니다."
          },
          {
            "id": 20,
            "category": "CSS 스타일링",
            "question": "테두리 색상을 검은색으로 설정하기 위한 CSS 속성은 무엇일까요?",
            "options": [
              "border-color",
              "outline-color",
              "border-style",
              "border-width"
            ],
            "answer": "border-color",
            "explanation": "'border-color: black;'는 테두리 색을 검은색으로 설정합니다."
          }
        ]
      },
      {
        "day": 5,
        "title": "CSS 레이아웃",
        "questions": [
          {
            "id": 21,
            "category": "CSS 레이아웃",
            "question": "Flexbox를 사용하여 요소를 가로 방향으로 정렬하려면 어떤 속성을 사용해야 하나요?",
            "options": [
              "display: flex;",
              "flex-direction: column;",
              "align-items: center;",
              "justify-content: center;"
            ],
            "answer": "display: flex;",
            "explanation": "display: flex;는 Flexbox를 활성화하여 요소를 가로로 정렬할 수 있습니다."
          },
          {
            "id": 22,
            "category": "CSS 레이아웃",
            "question": "Flexbox에서 요소의 정렬을 가로 중앙으로 맞추려면 어떤 속성을 사용해야 하나요?",
            "options": [
              "justify-content: center;",
              "align-items: center;",
              "text-align: center;",
              "display: inline-flex;"
            ],
            "answer": "justify-content: center;",
            "explanation": "justify-content: center;는 가로 축에서 요소를 중앙에 배치합니다."
          },
          {
            "id": 23,
            "category": "CSS 레이아웃",
            "question": "Grid 레이아웃을 활성화하려면 어떤 속성을 사용해야 하나요?",
            "options": [
              "display: grid;",
              "display: flex;",
              "align-content: grid;",
              "grid-template-columns: 1fr;"
            ],
            "answer": "display: grid;",
            "explanation": "display: grid;는 CSS Grid 레이아웃을 활성화하여 요소를 그리드 형식으로 정렬할 수 있습니다."
          },
          {
            "id": 24,
            "category": "CSS 레이아웃",
            "question": "Grid에서 두 번째 열의 크기를 설정하는 속성은 무엇인가요?",
            "options": [
              "grid-template-columns",
              "grid-column-gap",
              "grid-row-gap",
              "grid-auto-columns"
            ],
            "answer": "grid-template-columns",
            "explanation": "grid-template-columns 속성으로 열의 크기를 지정할 수 있습니다."
          },
          {
            "id": 25,
            "category": "CSS 레이아웃",
            "question": "Flexbox의 주 축 방향을 세로로 설정하는 속성은 무엇인가요?",
            "options": [
              "flex-direction: column;",
              "flex-wrap: wrap;",
              "align-content: center;",
              "display: block;"
            ],
            "answer": "flex-direction: column;",
            "explanation": "flex-direction: column;은 Flexbox의 주 축 방향을 세로로 설정합니다."
          }
        ]
      },
      {
        "day": 6,
        "title": "JavaScript 기초",
        "questions": [
          {
            "id": 26,
            "category": "JavaScript",
            "question": "변수를 선언할 때 사용하는 키워드는 무엇인가요?",
            "options": [
              "let",
              "declare",
              "def",
              "new"
            ],
            "answer": "let",
            "explanation": "JavaScript에서 변수는 let, const 또는 var로 선언합니다."
          },
          {
            "id": 27,
            "category": "JavaScript",
            "question": "함수에서 값을 반환하려면 어떤 키워드를 사용해야 하나요?",
            "options": [
              "return",
              "break",
              "continue",
              "pass"
            ],
            "answer": "return",
            "explanation": "return 키워드는 함수 내에서 값을 반환할 때 사용됩니다."
          },
          {
            "id": 28,
            "category": "JavaScript",
            "question": "조건문에 사용하는 키워드는 무엇인가요?",
            "options": [
              "if",
              "for",
              "while",
              "switch"
            ],
            "answer": "if",
            "explanation": "if 문은 조건을 확인하고, 조건이 참일 때 특정 코드를 실행합니다."
          },
          {
            "id": 29,
            "category": "JavaScript",
            "question": "배열의 길이를 반환하는 속성은 무엇인가요?",
            "options": [
              "length",
              "size",
              "count",
              "index"
            ],
            "answer": "length",
            "explanation": "length 속성은 배열의 요소 개수를 반환합니다."
          },
          {
            "id": 30,
            "category": "JavaScript",
            "question": "반복문 중 특정 조건이 참일 때 반복을 종료하는 키워드는 무엇인가요?",
            "options": [
              "break",
              "return",
              "continue",
              "stop"
            ],
            "answer": "break",
            "explanation": "break 문은 반복문을 즉시 종료하는 역할을 합니다."
          }
        ]
      },
      {
        "day": 7,
        "title": "JavaScript 함수 및 객체",
        "questions": [
          {
            "id": 31,
            "category": "JavaScript",
            "question": "함수를 정의하는 키워드는 무엇인가요?",
            "options": [
              "function",
              "def",
              "funct",
              "new"
            ],
            "answer": "function",
            "explanation": "JavaScript에서 함수를 정의할 때 function 키워드를 사용합니다."
          },
          {
            "id": 32,
            "category": "JavaScript",
            "question": "객체에 속성을 추가할 때 사용하는 구문은 무엇인가요?",
            "options": [
              "obj.key = value;",
              "obj(key, value);",
              "obj.key: value;",
              "add(obj, key, value);"
            ],
            "answer": "obj.key = value;",
            "explanation": "JavaScript 객체의 속성은 obj.key = value; 형식으로 추가합니다."
          },
          {
            "id": 33,
            "category": "JavaScript",
            "question": "함수를 변수에 할당할 수 있는 방법은 무엇인가요?",
            "options": [
              "const fn = function() {}",
              "var fn function = () => {}",
              "let function = new function() {}",
              "assign function to fn"
            ],
            "answer": "const fn = function() {}",
            "explanation": "JavaScript에서는 함수를 변수에 할당할 수 있으며, const fn = function() {}처럼 작성할 수 있습니다."
          },
          {
            "id": 34,
            "category": "JavaScript",
            "question": "객체에서 특정 속성에 접근할 때 사용하는 표기법은 무엇인가요?",
            "options": [
              "obj.key",
              "obj[key]",
              "key:obj",
              "obj{key}"
            ],
            "answer": "obj.key",
            "explanation": "객체의 속성에 접근할 때는 obj.key 표기법을 사용합니다."
          },
          {
            "id": 35,
            "category": "JavaScript",
            "question": "화살표 함수로 함수를 정의하는 방법은 무엇인가요?",
            "options": [
              "const fn = () => {}",
              "function fn() => {}",
              "fn() => {}",
              "const fn() => {}"
            ],
            "answer": "const fn = () => {}",
            "explanation": "JavaScript에서 화살표 함수는 const fn = () => {} 형식으로 정의됩니다."
          }
        ]
      }
    ]
  }
]